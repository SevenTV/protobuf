syntax = "proto3";

package twitch_edge.v1;

option go_package = "twitch_edge/v1";

service TwitchEdgeService {
  rpc RegisterEdge(RegisterEdgeRequest)
    returns (stream RegisterEdgeResponse) {}

  rpc PublishEdgeEvent(PublishEdgeEventRequest)
    returns (PublishEdgeEventResponse) {}

  rpc JoinChannel(JoinChannelRequest)
    returns (JoinChannelResponse) {}
}


message Channel {
  string id = 1;
  string login = 2;
}

enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_LOGIN = 1;
  EVENT_TYPE_JOIN_CHANNEL = 2;
  EVENT_TYPE_PART_CHANNEL = 3;
}

message RegisterEdgeRequest {
  string node_name = 1;
}

message RegisterEdgeResponse {
  message LoginPayload {
    Channel channel = 1;
    string oauth = 2;
  }
  message JoinChannelPayload {
    repeated Channel channels = 1;
  }
  message PartChannelPayload {
    repeated Channel channels = 1;
  }

  EventType type = 1;
  oneof payload {
    LoginPayload login_payload = 2;
    JoinChannelPayload join_channel_payload = 3;
    PartChannelPayload part_channel_payload = 4; 
  }
}

message PublishEdgeEventRequest {
  message LoginPayload {
    Channel channel = 1;
  }
  message JoinChannelPayload {
    repeated Channel channels = 1;
  }
  message PartChannelPayload {
    repeated Channel channels = 1;
  }

  EventType type = 1;
  oneof payload {
    LoginPayload login_payload = 2;
    JoinChannelPayload join_channel_payload = 3;
    PartChannelPayload part_channel_payload = 4; 
  }
}

message PublishEdgeEventResponse {
  bool success = 1;
}

message JoinChannelRequest {
  Channel channel = 1;
}

message JoinChannelResponse {
  bool success = 1;
}